/* Regra para Memorando001 do Contrato de Trabalho por tempo indeterminado
Desenvolvido em 13/04/2020 por Edson Reis */
@ Definição das Variáveis @
Definir Numero vNumEmp;
Definir Numero vTipCol;
Definir Alfa xDATADMA;
Definir Numero vNumCad;
Definir Numero cCid;
Definir Numero cCidn;
Definir Numero cBai;
Definir Numero cCep;
Definir Numero cCpf;
Definir Alfa xCpf;
Definir Alfa xCep;
Definir Alfa xBai;
Definir Alfa xCidn;
Definir Alfa xCid;
Definir Alfa xTexto;
Definir Alfa xMatricula; 
Definir Alfa xDatNas;
Definir Alfa xDataStr;
Definir Numero zEstCiv;
Definir Alfa xEstCiv;
Definir Alfa xCodLot;
Definir Alfa xCursorFicha;
Definir Alfa xAno;
Definir Alfa xMes;
Definir Alfa xDia;
Definir Alfa xCnpj;
Definir Alfa xNumCtp;
Definir Alfa xSerCtp;
Definir Alfa xEstCtp;
Definir Alfa xRazSoc;
Definir Alfa xNomFun;
Definir Alfa xEstNas;
Definir Alfa xCodEst;
Definir Alfa xEndNum;
Definir Alfa xEndRua;
Definir Numero pAno;
Definir Numero pMes;
Definir Numero pDia;
Definir Numero cCodMat;
Definir Numero cNumEmp;
Definir Numero cTipCol;
Definir Numero cCnpj;

@ Atribuição de Valores @
vNumEmp =  R034FUN.NumEmp;
vTipCol =  R034FUN.TipCol;
vNumCad =  R034FUN.NumCad;

@Transformar Inteiro em Alfa, o campo Matrícula@
IntParaAlfa (R034Fun.NumCad,xMatricula);



@Cidade de moradia@

cCid = R034CPL.CODCID;
 
SQL_Criar(xCursorFicha);


SQL_DefinirComando(xCursorFicha, " SELECT NOMCID FROM R074CID      \
                                WHERE  CODCID = :cCid   ");
SQL_DefinirInteiro(xCursorFicha, "cCid", cCid);
SQL_AbrirCursor(xCursorFicha);
SQL_RetornarAlfa(xCursorFicha, "NOMCID",xCid); 
SQL_FecharCursor(xCursorFicha);
SQL_Destruir(xCursorFicha);
@Cidade de moradia@


@Bairro de Moradia@

cBai = R034CPL.CODBAI;

SQL_Criar(xCursorFicha);
SQL_DefinirComando(xCursorFicha, " SELECT NOMBAI FROM R074BAI \
                                   WHERE CODCID = :cCid \
                                   AND CODBAI = :cBai ");
SQL_DefinirInteiro(xCursorFicha, "cCid", cCid);
SQL_DefinirInteiro(xCursorFicha, "cBai", cBai);
SQL_AbrirCursor(xCursorFicha);
SQL_RetornarAlfa(xCursorFicha, "NOMBAI", xBai);
SQL_FecharCursor(xCursorFicha);
SQL_Destruir(xCursorFicha);                                   
@Bairro de Moradia@



@Local de nascimento@
cCidn = R034CPL.CciNas;
 
SQL_Criar(xCursorFicha);


SQL_DefinirComando(xCursorFicha, " SELECT NOMCID FROM R074CID      \
                                WHERE  CODCID = :cCidn   ");
SQL_DefinirInteiro(xCursorFicha, "cCidn", cCidn);
SQL_AbrirCursor(xCursorFicha);
SQL_RetornarAlfa(xCursorFicha, "NOMCID",xCidn); 
SQL_FecharCursor(xCursorFicha);
SQL_Destruir(xCursorFicha);
@Local de nascimento@







/*
DecodData(R034FUN.DatNas,pDia,pMes,pAno);
IntParaAlfa(pAno,xAno);
IntParaAlfa(pMes,xMes);
IntParaAlfa(pDia,xDia);
ConverteMascara(0,xDataStr,xDatNas,"99/99/9999");
ConverteDataBanco (R034FUN.DATNAS,xDataStr);
*/

DesmontaData(R034FUN.DatNas,pDia,pMes,pAno);
IntParaAlfa(pAno,xAno);
IntParaAlfa(pMes,xMes);
IntParaAlfa(pDia,xDia);




@Transformar Inteiro em Alfa, o campo Estado Civil@    
zEstCiv = R034Fun.EstCiv;

 Se (zEstCiv = 1)
   Inicio
      xEstCiv = "solteiro (a)";
   Fim
 Se (zEstCiv = 2)
   Inicio
      xEstCiv = "casado (a)";
   Fim
 Se (zEstCiv = 3)
   Inicio
      xEstCiv = "divorciado (a)";
   Fim
 Se (zEstCiv = 4)
   Inicio
      xEstCiv = "viúvo (a)";
   Fim 
 Se (zEstCiv = 5)
   Inicio
      xEstCiv = "concubinato (a)";
   Fim 
 Se (zEstCiv = 6)
   Inicio
      xEstCiv = "separado (a)";
   Fim 
 Se (zEstCiv = 7)
   Inicio
      xEstCiv = "união estável (a)";
   Fim 
 Se (zEstCiv = 8)
   Inicio
      xEstCiv = "outros (a)";
   Fim 
 


xNomFun = R034FUN.NomFun; 
xEstNas = R034CPL.EstCiv;
xCodEst = R034CPL.CodEst;
xEndNum = R034CPL.EndNum;
xEndRua = R034CPL.EndRua;

@Transformar Inteiro em Alfa, o campo CPF@
cCpf = R034Fun.NumCpf;
ConverteMascara(1,cCpf,xCpf,"999.999.999-99");
@Transformar Inteiro em Alfa, o campo CPF@

@Transformar Inteiro em Alfa, o campo CNPJ@
cCnpj=R030FIL.NUMCGC;
ConverteMascara(1,cCnpj,xCnpj,"99.999.999/9999-99");
@Transformar Inteiro em Alfa, o campo CNPJ@

@Transformar Inteiro em Alfa, o campo NUMCTP@
IntParaALfa(R034FUN.NUMCTP,xNumCtp);
@Transformar Inteiro em Alfa, o campo NUMCTP@

@Alocar em uma variável,  o campo SERCTP@
xSerCtp = R034FUN.SERCTP;
@Alocar em uma variável,  o campo SERCTP@

@Alocar em uma variável,  o campo ESTCTP@
xEstCtp = R034FUN.ESTCTP;
@Alocar em uma variável,  o campo ESTCTP@     

@Alocar em uma variável,  o campo RAZSOC@  
xRazSoc = R030FIL.RAZSOC;
@Alocar em uma variável,  o campo RAZSOC@  

@Cep@
cCep=R034Cpl.EndCep;
ConverteMascara(1,cCep,xCep,"99999-999");
@Cep@

@Busca a Data de Nascimento@
SQL_Criar(xCursorFicha);

cCodMat = R034FUN.NUMCAD;
cNumEmp = R034FUN.NUMEMP;
cTipCol = R034FUN.TIPCOL;

SQL_DefinirComando(xCursorFicha, " SELECT (DATNAS) as DATADMA FROM R034FUN      \
                                WHERE  NUMCAD = :cCodMat  AND \
                                       NUMEMP = :cNumEmp  AND \
                                       TIPCOL = :cTipCol ");
SQL_DefinirInteiro(xCursorFicha, "cNumEmp", cNumEmp);
SQL_DefinirInteiro(xCursorFicha, "cCodMat", cCodMat);
SQL_DefinirInteiro(xCursorFicha, "cTipCol", cTipCol);
SQL_AbrirCursor(xCursorFicha);
SQL_RetornarAlfa(xCursorFicha, "DATADMA",xDATADMA); 
SQL_FecharCursor(xCursorFicha);
SQL_Destruir(xCursorFicha);
@Busca a Data de Nascimento@




   
 
valstr = "Por este instrumento particular firmado entre as partes, de um lado o (a) " +
          "Sr. (a) " + xNomFun + " nascido(a) em " + xDATADMA + " natural de " +   
          xCidn + " " + "(" + xEstNas + ")" + " estado civil: " + xEstCiv  + " residente no municipio de " +
          xCid + " (" +  xCodEst + ")" + " - " + xEndRua +", Nº "+ xEndNum + 
          " - BAIRRO: " + xBai +" - CEP: " + xCep + ", portador da Carteira Profissional nº " +
          xNUMCTP + " série " + xSerCtp + " " + xEstCtp + 
          " de ora em diante designado(a) EMPREGADO(A) e do outro lado a filial CNPJ " +
          xCnpj + " " + xRazSoc + " com sede à Rua Mipibú - Petrópolis - Natal(RN) de ora em diante " +
          "designada EMPREGADORA, fica justo e acordado o seguinte:";  
          
                                    
                        
        /*   SQL_DefinirComando(xCursorFicha, " SELECT (DATNAS) as xDATNAS FROM R034FUN      \
                                WHERE  NUMCAD = :cCodMat  AND \
                                       NUMEMP = :cNumEmp  AND \
                                       TIPCOL = :cTipCol ");
SQL_DefinirInteiro(xCursorFicha, "cNumEmp", cNumEmp);
SQL_DefinirInteiro(xCursorFicha, "cCodMat", cCodMat);
SQL_DefinirInteiro(xCursorFicha, "cTipCol", cTipCol);
SQL_AbrirCursor(xCursorFicha);
SQL_RetornarAlfa(xCursorFicha, "xDATNAS;",xDATNAS); 
SQL_FecharCursor(xCursorFicha);
SQL_Destruir(xCursorFicha);*/ 
        
          
          
/*          
xDia+"/"+xMes+"/"+xAno

"Eu, " + R034FUN.NomFun + ", " + xEstCiv + ", " + "CPF " + xCpf +
         ", Matrícula " + xMatricula + ", do setor " +  R016ORN.NomLoc + " da " + NomEmp +
         ", abaixo firmado, assumo o compromisso de manter confidencialidade e sigilo sobre" +
         " todas as informações corporativas que prestei e as quais tive acesso em todos canais disponíveis,"+
         " usados como objetos de trabalho ou em reuniões, nos termos do Código de Conduta e demais Políticas e Normas Internas da cooperativa." ; 
           xDia+"/"+xMes+"/"+xAno

 */

cancel(2);